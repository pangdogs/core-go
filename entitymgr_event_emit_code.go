// Code generated by eventcode -decl entitymgr_event.go -core  -emit_package core -export_emit=false; DO NOT EDIT.
package core

func emitEventEntityMgrAddEntity[T any](event IEvent, entityMgr T, entity Entity) {
	if event == nil {
		panic("nil event")
	}
	event.Emit(func(delegate FastIFace) bool {
		Fast2IFace[EventEntityMgrAddEntity[T]](delegate).OnEntityMgrAddEntity(entityMgr, entity)
		return true
	})
}

func emitEventEntityMgrRemoveEntity[T any](event IEvent, entityMgr T, entity Entity) {
	if event == nil {
		panic("nil event")
	}
	event.Emit(func(delegate FastIFace) bool {
		Fast2IFace[EventEntityMgrRemoveEntity[T]](delegate).OnEntityMgrRemoveEntity(entityMgr, entity)
		return true
	})
}

func emitEventEntityMgrEntityAddComponents[T any](event IEvent, entityMgr T, entity Entity, components []Component) {
	if event == nil {
		panic("nil event")
	}
	event.Emit(func(delegate FastIFace) bool {
		Fast2IFace[EventEntityMgrEntityAddComponents[T]](delegate).OnEntityMgrEntityAddComponents(entityMgr, entity, components)
		return true
	})
}

func emitEventEntityMgrEntityRemoveComponent[T any](event IEvent, entityMgr T, entity Entity, component Component) {
	if event == nil {
		panic("nil event")
	}
	event.Emit(func(delegate FastIFace) bool {
		Fast2IFace[EventEntityMgrEntityRemoveComponent[T]](delegate).OnEntityMgrEntityRemoveComponent(entityMgr, entity, component)
		return true
	})
}
